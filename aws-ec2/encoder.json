{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "EncoderLaunchConfiguration" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "commands" : {
              "1-set-bucket": {
                "command": { "Fn::Join" : ["", [
                  "setx CLICKBERRY_BucketName ",
                  {"Ref" : "FilesBucket" },
                  " /m"
                  ]]}
              },
              "2-set-queue": {
                "command": { "Fn::Join" : ["", [
                  "setx CLICKBERRY_QueueName ",
                  { "Fn::GetAtt" : ["EncodingsQueue", "QueueName"]},
                  " /m"
                  ]]}
              }
            }
          }
        }
      },
      "Properties": {
        "ImageId": "ami-c21b2ca8",
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": "100"
            }
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "EncoderSecurityGroup"
          }
        ],
        "KeyName": {
          "Ref": "KeyName"
        },
        "IamInstanceProfile": {
          "Ref": "EncoderInstanceProfile"
        },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "<script>\n",
          "cfn-init.exe -v -s ", { "Ref" : "AWS::StackName" },
          " -r EncoderLaunchConfiguration",
          " --region ", { "Ref" : "AWS::Region" }, "\n",

          "cfn-signal.exe -e %ERRORLEVEL% ", { "Fn::Base64" : { "Ref" : "EncoderWaitHandle" }}, "\n",
          "</script>"
          ]]}
        }
      }
    },
    "EncoderWaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },
    "EncoderWaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "EncoderLaunchConfiguration",
      "Properties" : {
        "Handle" : {"Ref" : "EncoderWaitHandle"},
        "Timeout" : "3600"
      }
    },
    "EncoderAutoScalingGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : ""},
        "LaunchConfigurationName" : { "Ref" : "EncoderLaunchConfiguration" },
        "MinSize" : "1",
        "MaxSize" : "1024",
        "DesiredCapacity" : { "Ref" : "InstanceCount" },
        "LoadBalancerNames" : [ { "Ref" : "EncoderLoadBalancer" } ]
      }
    },
    "EncoderLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "Listeners" : [{
          "LoadBalancerPort" : "80",
          "InstancePort" : "80",
          "Protocol" : "HTTP"
        }],
        "HealthCheck" : {
          "Target" : {
            "Fn::Join" : [ "", [ "HTTP:", "80", "/" ] ]
          },
          "HealthyThreshold" : "2",
          "UnhealthyThreshold" : "10",
          "Interval" : "300",
          "Timeout" : "60"
        }
      }
    },
    "EncoderSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable RDP and HTTP access via port 80",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "EncoderRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "Region2Principal",
                    {
                      "Ref": "AWS::Region"
                    },
                    "EC2Principal"
                  ]
                }
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "EncoderPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "EncoderPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                  "s3:ListBucket"
              ],
              "Resource": { "Fn::Join" : [
                  "", [ "arn:aws:s3:::", { "Ref" : "FilesBucket" } ]
               ] }
            },
            {
              "Effect": "Allow",
              "Action": [
                  "s3:*"
              ],
              "Resource": { "Fn::Join" : [
                  "", [ "arn:aws:s3:::", { "Ref" : "FilesBucket" } , "/*" ]
               ] }
            },
            {
              "Resource": {
                "Fn::GetAtt": [
                  "EncodingsQueue",
                  "Arn"
                ]
              },
              "Action": [
                  "sqs:*"
              ],
              "Effect": "Allow"
            },
            {
              "Resource": {
                "Fn::GetAtt": [
                  "EncodingsDeadQueue",
                  "Arn"
                ]
              },
              "Action": [
                  "sqs:*"
              ],
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "EncoderRole"
          }
        ]
      }
    },
    "EncoderInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "EncoderRole"
          }
        ]
      }
    },
    "FilesBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "Private"
      }
    },
    "EncodingsQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "RedrivePolicy": {
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "EncodingsDeadQueue",
              "Arn"
            ]
          },
          "maxReceiveCount": 10
        }
      }
    },
    "EncodingsDeadQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
      }
    }
  },
  "Mappings": {
    "Region2Principal": {
      "us-east-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "us-west-2": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "us-west-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "eu-west-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-southeast-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-northeast-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "ap-southeast-2": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "sa-east-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      },
      "cn-north-1": {
        "EC2Principal": "ec2.amazonaws.com.cn",
        "OpsWorksPrincipal": "opsworks.amazonaws.com.cn"
      },
      "eu-central-1": {
        "EC2Principal": "ec2.amazonaws.com",
        "OpsWorksPrincipal": "opsworks.amazonaws.com"
      }
    }
  },
  "Parameters": {
    "InstanceCount" : {
      "Description" : "Number of instances to start",
      "Default" : "3",
      "Type" : "Number",
      "MinValue" : "1",
      "MaxValue" : "1024"
    },    
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to get RDP password for the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType": {
      "Description": "Instance type",
      "Type": "String",
      "Default": "m4.large",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "cc1.4xlarge",
        "cc2.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "cg1.4xlarge",
        "cr1.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    }
  },
  "Outputs" : {
    "URL" : {
      "Description" : "URL of the Clickberry Encoder Cluster",
      "Value" : { "Fn::Join" : [ "", [ "http://", { "Fn::GetAtt" : ["EncoderLoadBalancer", "CanonicalHostedZoneName"] }]]}
    }
  }
}